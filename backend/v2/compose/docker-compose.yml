version: "3.3"

services:
  eureka-server:
    build: 
      context: "../eureka-server"
      # dockerfile: "Dockerfile"
    container_name: "local-eureka"
    networks:
      - test-net
    ports:
      - 8761:80
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-server/eureka

  gateway-server:
    build: 
      context: "../gateway-server"
    container_name: "local-gateway"
    networks:
      - test-net
    ports:
      - 8080:80
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-server/eureka
    depends_on:
      - eureka-server

  rabbitmq:
    image: rabbitmq:latest
    container_name: local-rmq
    networks:
      - test-net
    ports:
      - 5672:5672
      - 15672:15672

  postgres-db:
    build:
      context: "../db"
    container_name: "local-api-repository-psql"
    networks:
      - test-net
    ports:
      - "5432:5432"  # 호스트 포트와 컨테이너 포트 매핑
    environment:
      POSTGRES_USER: lshh
      POSTGRES_PASSWORD: lshh.com
      POSTGRES_DB: api_repository
    volumes:
      - ../db/pgdata:/var/lib/postgresql/data

  api-repository:
    build:
      context: "../api-repository"
    container_name: "local-api-repository"
    networks: 
      - test-net
    ports:
      - 9891:80
    environment:
      eureka.client.serviceUrl.defaultZone: http://eureka-server/eureka
      #spring.datasource.url: jdbc:postgresql://${DB_HOSTNAME}:${DB_PORT}/${DB_NAME}
      #spring.datasource.username: ${DB_USERNAME}
      #spring.datasource.password: ${DB_PASSWORD}
      SPRING_DATASOURCE_URL: jdbc:postgresql://${DB_HOSTNAME}:${DB_PORT}/${DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - eureka-server
      - postgres-db


networks:
  test-net:
